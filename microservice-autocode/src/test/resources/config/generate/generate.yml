generate:
  #当前的模式：1，完整覆盖模式，2，追加模式,, 3，追加方法模式,4,追加字段模式
  #1，完整覆盖模式，针对首次生成工程
  #在运行之前将所有文件进行删除操作，包括文件夹。
  #2，追加覆盖模式,针对同一工程的新加聚合的场景
  #当文件已经存在，则会发生文件覆盖，
  #特别注意: 当发生表重命名的情况，需要手动清理已经生成的文件。
  #根据情况选择是否需要更新开始错误码号。
  #3,追加方法模式，针对已经存在的代码，添加新方法的情况
  #此模式会在原代码的结束前的位置添加新的方法
  #4,数据库表进行了段的更新，
  #所有实体文件中添加字段以及方mapper文件中
  #转换方法中添加字段,单元测试中添加字段
  model: 1
  #生成代码的类型：ddd，使用领域驱动ddd四层架构
  type: ddd
  #生成的目标数据库类型:mysql目标数据库为mysql;oralce，目标数据库为oracle
  databaseType: mysql
  #数据库表空间命名
  databaseTableSpaceName: generate
  #错误码开始编号，依次向后；如果需要重新以此开始，需删除序列文件.否则将以序列化后的文件数字，取整加2000开始
  startErrorCode: -10000
  #是否修改错误码编号,默认为true，进行修改
  updateCode: true
  #作者名称，即代码写在@author中的名称
  author: liujun
  code:
    #单个插入方法
    - name: insert
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: insert
      #方法的描述
      comment: 单个添加
      #排序
      order: 100
    #批量插入方法
    - name: insertList
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: insert
      #方法的描述
      comment: 批量添加
      #参数列表,table_name表示以表名生成的对象实体，默认 table_name
      params: java.util.List<table_name>
      #排序
      order: 200
    #数据修改
    - name: update
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: update
      #方法的注释
      comment: 修改方法
      #排序
      order: 300
    #单个数据删除
    - name: delete
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: delete
      #方法的注释
      comment: 单个删除
      #标识当前是否为主键操作
      primaryFlag: true
      #排序
      order: 400
    #批量根据主键删除数据
    - name: deleteByIds
      #当前方法是否禁用 true 表示禁用，false 表示启用，默认值为false，即未配制或者值为false都为启用，true表示禁用
      disable: true
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: delete
      #方法的注释
      comment: 批量删除
      #where条件使用数据库字段,多个以逗号分隔,in关键字表示在范围内匹配
      where: namespace_id,oid in
      #排序
      order: 500
    #分页查询
    - name: queryPage
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: query
      #方法的注释
      comment: 分页查询
      #分页查询标识
      pageQueryFlag: true
      #返回值类型信息
      returns: java.util.List<table_name>
      #排序
      order: 600
    #根据主键进行查询
    - name: queryById
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: query
      #方法的注释
      comment: 根据id查询
      #返回值类型信息
      returns: table_name
      #排序
      order: 700
    #根据主键集合进行查询操作
    - name: queryByIds
      disable: true
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: query
      #方法的注释
      comment: 根据一批id查询
      ##where条件使用数据库字段,多个以逗号分隔,in关键字表示在范围内匹配
      where: OID in
      #返回值类型信息
      returns: java.util.List<table_name>
      #排序
      order: 800
    #根据主键集合进行查询操作
    - name: queryByName
      #当前方法是否禁用 true 表示禁用，false 表示启用，默认值为false，即未配制或者值为false都为启用，true表示禁用
      disable: true
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: query
      #方法的注释
      comment: 根据名称查询
      ##where条件使用数据库字段,多个以逗号分隔,in关键字表示在范围内匹配
      where: NAMESPACE_ID,USER_NAME in
      #返回值类型信息
      returns: java.util.List<table_name>
      #排序
      order: 900
    #根据主键集合进行查询操作
    - name: queryByInfo
      #此标识用于在方法操作时对返回类型进行改变，修改在数据库层返回int，操作的行数，在业务层返回boolean，标识成功与失败
      operator: query
      #当前方法是否禁用 true 表示禁用，false 表示启用，默认值为false，即未配制或者值为false都为启用，true表示禁用
      disable: false
      #方法的注释
      comment: 根据信息查询
      ##where条件使用数据库字段,多个以逗号分隔,in关键字表示在范围内匹配
      #where: NAMESPACE_ID,USER_NAME
      #返回值类型信息
      returns: table_name
      #排序
      order: 1000
  #代码内的目录结构的配制
  codeMenuTree:
    #最基础的目标配制
    baseMenu: com.paraview.example.
    #最新输出的模块的名称
    domainName: user
  #模块名称
  moduleName: user
  #工程名
  projectName: data-user
  #maven的配制信息
  #maven的artifactId即为各工程或者模块的名称
  maven:
    groupId: com.paraview.example
    version: 1.0-SNAPSHOT
  #代码生成器需要包括的范围
  #目前存在api,application,domain,repository
  #api代码对外暴露的api接口，包含一系列的方法
  #application表示聚合层
  #domain表示领域服务层
  #repository表示存储层的代码生成，目前使用mybatis
  scope: api,application,domain,repository
  #输出文件的配制
  output: D:\java\workspace\selfwork\autocode\testgenerate\example